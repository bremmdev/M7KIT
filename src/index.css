@import "tailwindcss";

@config '../tailwind.config.js';

@variant dark (&:where([data-theme="dark"], [data-theme="dark"] *));

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@theme {
  --color-accent: oklch(54.6% 0.245 262.881); /* blue-600 */
  --color-accent-muted: oklch(0.9517 0.0199 267.29); /* blue-600/10 */
  --color-surface-subtle: oklch(98.4% 0.003 247.858); /* slate-50 */
  --color-surface-muted: oklch(92.9% 0.013 255.508); /* slate-200 */
  --color-surface: oklch(1 0 0); /* white */
  --color-neutral: oklch(70.4% 0.04 256.788); /* slate-400 */
  --color-foreground: oklch(37.2% 0.044 257.287); /* slate-700 */
  --color-foreground-inverse: oklch(92.9% 0.013 255.508); /* slate-200 */
}

@layer theme {
  :root,
  :host {
    @variant dark {
      --color-accent: oklch(92.4% 0.12 95.746); /* amber-200 */
      --color-accent-muted: oklch(0.2916 0.0163 259.79); /* amber-200/10 */
      --color-surface-subtle: oklch(20.8% 0.042 265.755); /* slate-900 */
      --color-surface-muted: oklch(37.2% 0.044 257.287); /* slate-700 */
      --color-surface: oklch(20.8% 0.042 265.755); /* slate-900 */
      --color-neutral: oklch(55.4% 0.046 257.417); /* slate-500 */
      --color-foreground: oklch(92.9% 0.013 255.508); /* slate-200 */
      --color-foreground-inverse: oklch(37.2% 0.044 257.287); /* slate-700 */
    }
  }
}

@layer utilities {
  .focus-ring,
  .focus-ring-inner,
  .focus-ring-neutral,
  .focus-ring-neutral-inner {
    outline: none;

    &:focus {
      outline: none;
    }

    &:focus-visible {
      border-radius: 0.25rem;
    }
  }

  .focus-ring:focus-visible,
  .focus-ring-inner:focus-visible {
    outline: 2px solid var(--color-accent);
  }

  .focus-ring-neutral:focus-visible,
  .focus-ring-neutral-inner:focus-visible {
    outline: 2px solid var(--color-foreground);
  }

  .focus-ring:focus-visible,
  .focus-ring-neutral:focus-visible {
    outline-offset: 2px;
  }

  .focus-ring-inner:focus-visible,
  .focus-ring-neutral-inner:focus-visible {
    outline-offset: -1px;
  }
}

button {
  cursor: pointer;
}

.visually-hidden:not(:focus):not(:active) {
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
}

.diamond-gallery:has(img:hover) img:not(:hover) {
  filter: brightness(0.5) saturate(0.5);
  transition: filter 300ms ease-in-out;
}

.showcase:has(img:hover) img:not(:hover) {
  filter: brightness(0.5) saturate(0.5);
  transition: filter 500ms ease-in-out;
}

/* Custom styles for the details element */
details > summary::before {
  transform: rotate(-90deg) translate(2px, -0px); /* Align the triangle with the text */
}

details[open] > summary::before {
  transform: rotate(0deg) translate(0, -2px);
}

/*modal chromium size bug fix*/
dialog:modal {
  max-width: 100vw;
  max-height: 100vh;
}

@keyframes slideAndBack {
  0% {
    transform: translateX(0);
    z-index: 0;
  }
  50% {
    transform: translateX(120%);
    z-index: 0;
  }
  75% {
    transform: translateX(120%);
    z-index: -1;
  }
  100% {
    transform: translateX(0);
    z-index: -1;
  }
}

@keyframes slideAndBackMirrored {
  0% {
    transform: translateX(0);
    z-index: -1;
  }
  50% {
    transform: translateX(+120%);
    z-index: -1;
  }
  75% {
    transform: translateX(+120%);
    z-index: 1;
  }
  100% {
    transform: translateX(0);
    z-index: 1;
  }
}
